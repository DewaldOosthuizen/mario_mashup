[gd_scene load_steps=15 format=2]

[ext_resource path="res://resources/Levels/deserttileset/png/BG.png" type="Texture" id=1]
[ext_resource path="res://Scenes/Level 2/Flora_1_scene.tscn" type="PackedScene" id=2]
[ext_resource path="res://Scenes/Level 2/Flora_2_scene.tscn" type="PackedScene" id=3]
[ext_resource path="res://Scenes/Level 2/Rock_scene.tscn" type="PackedScene" id=4]
[ext_resource path="res://Scenes/Level 2/Skeleton_scene.tscn" type="PackedScene" id=5]
[ext_resource path="res://Scenes/Level 2/Pit_Scenet.tscn" type="PackedScene" id=6]
[ext_resource path="res://Scenes/Level 2/Floor_Scene.tscn" type="PackedScene" id=7]
[ext_resource path="res://Scenes/Level 2/Float_Scene.tscn" type="PackedScene" id=8]
[ext_resource path="res://Scenes/Enemies/Enemy_Zombie_scene.tscn" type="PackedScene" id=9]
[ext_resource path="res://Scenes/Open_Door_Scene.tscn" type="PackedScene" id=10]
[ext_resource path="res://Scenes/Characters/Robot/Robot_Character_Scene.tscn" type="PackedScene" id=11]

[sub_resource type="RectangleShape2D" id=1]
extents = Vector2( 289.4, 18.2363 )

[sub_resource type="GDScript" id=2]
script/source = "extends KinematicBody2D

# variables
var playerSpeedY = 0
var velocity = Vector2(0, 0)
var movementDirection = -1
var deathTime = 0
var deltaTime = 0
var speed_multiplier = 1

var playerSprite
var bubbleSpace

var genders = ['female', 'male']
var gender = genders[randi()%2]

var death = false
var attack = false

const PLAYERSPEEDX = 200
const PLAYERSPEEDX_MULTIPLIER = 1.1
const GRAVITY = 800



func _ready():
	playerSprite = get_node(\"AnimatedSprite\")
	bubbleSpace = get_node(\"React - Area2D\")
	if (gender == 'female'):
		playerSprite.scale = Vector2(0.13, 0.13)
		
	set_process(true)
	pass
	
	
func _process(delta):
	deltaTime += delta
	_animate_player()
	_action1()
	
	playerSpeedY += GRAVITY * delta
	var playerSpeedX = PLAYERSPEEDX
	
	if (attack): 
		playerSpeedX = (playerSpeedX * speed_multiplier)
		
	
	velocity.x = playerSpeedX * delta * movementDirection
	velocity.y = playerSpeedY * delta
	
	if(get_node(\"CollisionShape2D\").disabled):
		deathTime += delta
		death = true
		velocity.y = 0
		velocity.x = 0
	
	#warning-ignore:return_value_discarded
	move_and_collide(Vector2(0, velocity.y))
	var collidedObject2 = move_and_collide(Vector2(velocity.x, 0))
	
	if (collidedObject2 and !death):
		if (collidedObject2.normal == Vector2(0,-1)):
			playerSpeedY = 0
		if (collidedObject2.normal == Vector2(1,0)):
			movementDirection = 1
			playerSprite.flip_h = false
		elif (collidedObject2.normal == Vector2(-1,0)):
			movementDirection = -1
			playerSprite.flip_h = true
	
	if(deathTime > 2):
		self.free()
	
	pass


func _animate_player():
	if (death):
		playerSprite.animation = gender+\"_dead\"
	elif(attack):
		playerSprite.animation = gender+\"_attack\"
	else:
		playerSprite.animation = gender+\"_walk\"
		
	if(deltaTime > 0.1):
		if(playerSprite.frame == playerSprite.get_sprite_frames().get_frame_count(playerSprite.animation) - 1):
			if (!death):
				playerSprite.frame = 0
		else:
			playerSprite.frame = playerSprite.frame + 1
		deltaTime = 0
	pass
	
	
func _action1():
	if (!death):
		var area = bubbleSpace.get_overlapping_bodies()
		attack = false
		if (area.size() != 0):
			for body in area:
				if (body.is_in_group(\"character\")):
					attack = true
		else:
			attack = false
	pass"

[sub_resource type="GDScript" id=3]
script/source = "extends KinematicBody2D

# variables
var playerSpeedX = 0
var playerSpeedY = 0
var velocity = Vector2(0, 0)
var facingDirection = 0
var movementDirection = 0
var maxJumpCount = 1
var currentJumpCount = 0
var deltaTime = 0
var power = 0
var playerSprite

# Flag checks
var sliding = false
var blood = false
var invincible = false;
var shooting = false;
var started = false
var repeatFrames = true;

# Timers
var slidingTimer = 0
var shootingTimer = 0
var invincibleTime = 0;
var invincibleTimer = 0;
var areaCheckInterval = 0;

# constants
const MAXIMUMSPEED = 350
const MOVEMULTI = 800
const JUMPFORCE = 450
const GRAVITY = 800
const DELTA_TIME_REACT = 0.05
const bloodParticle_scene = preload(\"res://Scenes/Blood_Particle_Scene.tscn\")
const bullet_scene = preload(\"res://Scenes/Characters/Robot/Bullet_Scene.tscn\")

func _ready():
	playerSprite = get_node(\"AnimatedSprite\")
	set_process(true)
	pass


func _process(delta):
	deltaTime += delta
	_areaChecks(delta)
	_set_speed(delta)
	_apply_gravity(delta)
	
	var collidedObject1 = move_and_collide(Vector2(0, velocity.y))
	var collidedObject2 = move_and_collide(Vector2(velocity.x, 0))

	_handle_collision(collidedObject1, true)
	_handle_collision(collidedObject2, false)
	
	_handle_timers(delta)
	_control(delta)
	
	if (!started):
		started = true
	pass


func _handle_timers(delta):
	# determines how long the player can slide for
	if (sliding):
		slidingTimer += delta
		if (slidingTimer > 1):
			sliding = false
			slidingTimer = 0
			
	# creates a delay so that the player can not keep on firing
	if (shooting):
		shootingTimer += delta
		if (shootingTimer > 1):
			shooting = false
			shootingTimer = 0
	
	# Gives some time for showing blood, and taking damage
	if (blood):
		blood = false
		if (!invincible):
			var particleEffect = bloodParticle_scene.instance()
			particleEffect.get_node(\".\").set_emitting(true)
			particleEffect.position = self.get_position()
			get_tree().root.add_child(particleEffect)
				
			power -= 1
			invincible = true
			if (power < 0):
				self.queue_free()
				#warning-ignore:return_value_discarded
				get_tree().reload_current_scene()
			
	
	# Create flickering effect to indicate damage
	if (invincible):
		invincibleTime += delta
		invincibleTimer += delta
		
		if (invincibleTimer > 3):
			playerSprite.visible = true
			invincible = false
			invincibleTimer = 0
			
		if(invincibleTime > 0.1):
			if(playerSprite.visible):
				playerSprite.visible = false
			else:
				playerSprite.visible = true
			
			invincibleTime = 0
	elif (!playerSprite.visible):
		playerSprite.visible = true
		

	
	pass

func _control(delta):
	# Reset character animation to default when no action is being performed
	if (currentJumpCount == 0 and !shooting and !sliding and facingDirection != 0):
		playerSprite.animation = \"robot_walk\"
		repeatFrames = true
	
	# Check interuption movements when shooting frames are active
	if (shooting and playerSprite.animation == \"robot_shoot\" and facingDirection != 0):
		playerSprite.animation = \"robot_walk\"
		shooting = false
	elif (shooting and playerSprite.animation == \"robot_run_shoot\" and facingDirection == 0):
		playerSprite.animation = \"robot_idle\"
		shooting = false
	elif (shooting and playerSprite.animation == \"robot_jump_shoot\" and currentJumpCount == 0):
		if (facingDirection == 0):
			playerSprite.animation = \"robot_idle\"
		else: 
			playerSprite.animation = \"robot_walk\"
		shooting = false
	
	# Handle input events
	if (Input.is_action_just_pressed(\"action_1\") and !shooting and !sliding):
		shooting = true
		var bullet = bullet_scene.instance()
		bullet.speed = 800
		bullet.power = power
		var bulletSprite = bullet.get_node(\"AnimatedSprite\")
		
		if (!playerSprite.flip_h):
			bulletSprite.flip_h = false
			bullet.movementDirection = 1
			bullet.position = self.get_position()  - Vector2(-40, 5)
		else:
			bulletSprite.flip_h = true;
			bullet.movementDirection = -1
			bullet.position = self.get_position()  - Vector2(40, 5)
			
		#	Add the nodes to the current scene
		get_tree().root.add_child(bullet)
		
		repeatFrames = false
		if (currentJumpCount > 0):
			playerSprite.animation = \"robot_jump_shoot\"
		elif (facingDirection != 0):
			playerSprite.animation = \"robot_run_shoot\"
			repeatFrames = true
		elif (facingDirection == 0):
			playerSprite.animation = \"robot_shoot\"
			
	elif (Input.is_action_just_pressed(\"action_2\") and facingDirection != 0 and !sliding):
		sliding = true
		playerSprite.animation = \"robot_slide\"
		repeatFrames = true
	elif (Input.is_action_just_pressed(\"move_jump\") and currentJumpCount < maxJumpCount and !sliding):
		playerSpeedY = -JUMPFORCE
		currentJumpCount += 1
		playerSprite.animation = \"robot_jump\"
		repeatFrames = false
	elif (Input.is_action_just_pressed(\"tab\")):
#			playerSprite.visible = false
#			var character = Dino_Character_Scene.instance()
#			character.position = self.get_position()
#			get_tree().root.add_child(character)
#			self.queue_free()
			pass	
	elif (Input.is_action_pressed(\"move_left\")):
		facingDirection = -1
		movementDirection = facingDirection
		playerSprite.flip_h = true;
	elif (Input.is_action_pressed(\"move_right\")):
		facingDirection = 1
		movementDirection = facingDirection
		playerSprite.flip_h = false;
	else:
		if (!sliding):
			facingDirection = 0
			if (currentJumpCount == 0 and !shooting and !sliding):	
				playerSprite.animation = \"robot_idle\"
				repeatFrames = true
			
	_animate_player()
	pass


func _set_speed(delta):
	# control speed
	if (facingDirection != 0):
		playerSpeedX += MOVEMULTI * delta
	else:
		playerSpeedX -= MOVEMULTI * 2 * delta
	pass
	

func _apply_gravity(delta):
	#apply gravity to jump
	playerSpeedY += GRAVITY * delta
	#stop player from keeping on increasing speed
	playerSpeedX = clamp(playerSpeedX, 0, MAXIMUMSPEED)
	#set player speed
	velocity.x = playerSpeedX * delta * movementDirection
	velocity.y = playerSpeedY * delta
	
	pass


func _animate_player():
	if (deltaTime > DELTA_TIME_REACT):
		if (playerSprite.frame == playerSprite.get_sprite_frames().get_frame_count(playerSprite.animation) - 1):
			if (repeatFrames):
				playerSprite.frame = 0
		else:
			playerSprite.frame = playerSprite.frame + 1
			
		deltaTime = 0
	pass


func _handle_collision(collidedObject, resetJump):
	if (collidedObject):
		#if character is on the floor
		if (resetJump):
			playerSpeedY= 0
			 
			if (currentJumpCount > 0):
				currentJumpCount = 0
				repeatFrames = true;
	
		if (sliding and !resetJump):
			var objectParent = collidedObject.collider.get_parent()
			if (objectParent.is_in_group(\"Bricks\")):
				objectParent.break_object()
			elif (objectParent.is_in_group(\"PowerUpBrick\")):
				objectParent.break_object()
	pass

	
func _areaChecks(delta):
	var area = get_node(\"Area2D\").get_overlapping_bodies()
	if (area.size() != 0):
		for body in area:
			if (body):
				if (body.is_in_group(\"PowerUp\")):
					power += 1
					body.queue_free()
				elif (body.is_in_group(\"Pits\")):
					power = 0
					#warning-ignore:return_value_discarded
					get_tree().reload_current_scene()
				elif (body.is_in_group(\"Enemy_character\")):
					if (sliding):
						body.get_node(\"CollisionShape2D\").disabled = true
					else:
						blood = true;
				elif (body.is_in_group(\"Enemy_saw\")):
					blood = true
	pass"

[node name="Level2" type="Node2D"]

[node name="Backgrounds" type="Node2D" parent="."]

[node name="BG1" type="Sprite" parent="Backgrounds"]
position = Vector2( 7989.28, 416.254 )
scale = Vector2( 2.07082, 0.868507 )
texture = ExtResource( 1 )

[node name="BG2" type="Sprite" parent="Backgrounds"]
position = Vector2( 49.3848, 416.464 )
scale = Vector2( 2.07082, 0.868308 )
texture = ExtResource( 1 )

[node name="BG3" type="Sprite" parent="Backgrounds"]
position = Vector2( 2693.96, 416.929 )
scale = Vector2( 2.07082, 0.86784 )
texture = ExtResource( 1 )

[node name="BG4" type="Sprite" parent="Backgrounds"]
position = Vector2( 5343.33, 416.585 )
scale = Vector2( 2.07082, 0.868507 )
texture = ExtResource( 1 )

[node name="BG5" type="Sprite" parent="Backgrounds"]
position = Vector2( 10639.2, 416.254 )
scale = Vector2( 2.07082, 0.868507 )
texture = ExtResource( 1 )

[node name="BG6" type="Sprite" parent="Backgrounds"]
position = Vector2( 13297.2, 416.977 )
scale = Vector2( 2.10832, 0.86738 )
texture = ExtResource( 1 )

[node name="BG7" type="Sprite" parent="Backgrounds"]
position = Vector2( 15976.2, 416.977 )
scale = Vector2( 2.10832, 0.86738 )
texture = ExtResource( 1 )

[node name="BG8" type="Sprite" parent="Backgrounds"]
position = Vector2( 18662.9, 416.977 )
scale = Vector2( 2.10832, 0.86738 )
texture = ExtResource( 1 )

[node name="Environment" type="Node2D" parent="."]
position = Vector2( 196.122, 361.219 )

[node name="Tree1" parent="Environment" instance=ExtResource( 2 )]
position = Vector2( 424.227, 167.018 )

[node name="Tree2" parent="Environment" instance=ExtResource( 2 )]
position = Vector2( 2972.93, 167.018 )

[node name="Tree3" parent="Environment" instance=ExtResource( 2 )]
position = Vector2( 6502.02, 167.018 )

[node name="Cactus1" parent="Environment" instance=ExtResource( 3 )]
position = Vector2( 1187.5, 257.208 )

[node name="Cactus2" parent="Environment" instance=ExtResource( 3 )]
position = Vector2( 3732.86, 257.208 )

[node name="Cactus3" parent="Environment" instance=ExtResource( 3 )]
position = Vector2( 4669.83, 212.113 )

[node name="Rock1" parent="Environment" instance=ExtResource( 4 )]
position = Vector2( -73.4801, 290.612 )

[node name="Rock2" parent="Environment" instance=ExtResource( 4 )]
position = Vector2( 2164.56, 289.861 )

[node name="Rock3" parent="Environment" instance=ExtResource( 4 )]
position = Vector2( 5773.82, 247.187 )

[node name="Rock4" parent="Environment" instance=ExtResource( 4 )]
position = Vector2( 4839.99, 250.527 )

[node name="Rock5" parent="Environment" instance=ExtResource( 4 )]
position = Vector2( 3839.75, 290.612 )

[node name="Skeleton1" parent="Environment" instance=ExtResource( 5 )]
position = Vector2( 873.506, 312.324 )

[node name="Skeleton2" parent="Environment" instance=ExtResource( 5 )]
position = Vector2( 8870.34, 312.294 )
flip_h = true

[node name="Skeleton3" parent="Environment" instance=ExtResource( 5 )]
position = Vector2( 7011.43, 308.984 )

[node name="Skeleton4" parent="Environment" instance=ExtResource( 5 )]
position = Vector2( 15290, 313.065 )

[node name="Bricks" type="Node2D" parent="."]

[node name="Wall" type="Node2D" parent="."]
editor/display_folded = true
position = Vector2( -9.47479, 345.345 )
rotation = 1.5708

[node name="wall1" type="Node2D" parent="Wall"]
editor/display_folded = true

[node name="StaticBody2D" type="StaticBody2D" parent="Wall/wall1"]
position = Vector2( -0.365601, -1.45453 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Wall/wall1/StaticBody2D"]
position = Vector2( 25.9671, 3.52137 )
scale = Vector2( 1.68695, 1 )
shape = SubResource( 1 )

[node name="wall2" type="Node2D" parent="Wall"]
position = Vector2( 11.5479, -5254.99 )

[node name="StaticBody2D" type="StaticBody2D" parent="Wall/wall2"]
position = Vector2( -0.365601, -1.45453 )

[node name="CollisionShape2D" type="CollisionShape2D" parent="Wall/wall2/StaticBody2D"]
position = Vector2( 68.7744, -11904.2 )
scale = Vector2( 1.61456, 1 )
shape = SubResource( 1 )

[node name="Pits" type="Node2D" parent="."]
position = Vector2( 0, -3.57628e-006 )
scale = Vector2( 3, 1 )

[node name="Pit1" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( -334.593, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit2" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( -242.177, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit3" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( -149.203, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit4" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( -54.5594, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit5" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 536.129, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit6" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 871.279, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit7" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 1205.32, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit8" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 1800.46, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit9" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 1898.44, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit10" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 2491.36, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit11" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 2705.7, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit12" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 2928.39, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit13" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 3399.94, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit14" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 3497.92, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit15" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 3595.35, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit16" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 3692.22, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit17" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 3790.2, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit18" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 3888.18, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit19" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 3985.61, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit20" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 4084.15, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit21" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 4181.02, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit22" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 4278.34, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit23" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 4375.66, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit24" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 4475.09, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit25" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 4572.93, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit26" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 4673.42, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit27" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 4781.31, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit28" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 4900.84, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit29" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 5092.83, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit30" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 5771.61, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit31" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 5771.61, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit32" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 5871.11, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit33" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 5969.67, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit34" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 6068.23, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit35" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 6167.72, 784.986 )
scale = Vector2( 1, 3 )

[node name="Pit36" parent="Pits" instance=ExtResource( 6 )]
position = Vector2( 6267.22, 784.986 )
scale = Vector2( 1, 3 )

[node name="Ground" type="Node2D" parent="."]
position = Vector2( 6.13867, 419.887 )

[node name="floor1" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 0, 373.825 )

[node name="floor2" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 371.847, 373.825 )

[node name="floor3" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 744.3, 373.825 )

[node name="floor4" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 1116.3, 373.825 )

[node name="floor5" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 1760.85, 373.825 )

[node name="floor6" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 2133.3, 373.825 )

[node name="floor7" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 2756.85, 373.825 )

[node name="floor8" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 3128.85, 373.825 )

[node name="floor9" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 3773.85, 373.825 )

[node name="floor10" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 4146.85, 373.825 )

[node name="floor11" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 4519.51, 332.825 )

[node name="floor12" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 4889.43, 332.825 )

[node name="floor13" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 5861.85, 332.825 )

[node name="floor14" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 6234.75, 332.825 )

[node name="floor15" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 6607.75, 373.825 )

[node name="floor16" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 6980.75, 373.825 )

[node name="floor17" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 7623.85, 373.825 )

[node name="floor18" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 8283.85, 373.825 )

[node name="floor19" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 8954.85, 373.825 )

[node name="floor20" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 9326.76, 373.825 )

[node name="floor21" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 9698.88, 373.825 )

[node name="floor22" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 15356, 378.585 )

[node name="floor23" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 15725.7, 378.585 )

[node name="floor24" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 16087.5, 378.585 )

[node name="floor25" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 16449.2, 378.585 )

[node name="floor26" parent="Ground" instance=ExtResource( 7 )]
position = Vector2( 16822.1, 378.585 )

[node name="Floats" type="Node2D" parent="."]

[node name="Float1" parent="Floats" instance=ExtResource( 8 )]
position = Vector2( 10201.3, 646.825 )

[node name="Float2" parent="Floats" instance=ExtResource( 8 )]
position = Vector2( 10641.4, 593.416 )

[node name="Float3" parent="Floats" instance=ExtResource( 8 )]
position = Vector2( 10973.1, 501.389 )

[node name="Float4" parent="Floats" instance=ExtResource( 8 )]
position = Vector2( 11311, 376.042 )

[node name="Float5" parent="Floats" instance=ExtResource( 8 )]
position = Vector2( 11641.1, 376.042 )

[node name="Float6" parent="Floats" instance=ExtResource( 8 )]
position = Vector2( 11967.9, 376.042 )

[node name="Float7" parent="Floats" instance=ExtResource( 8 )]
position = Vector2( 12329.7, 376.042 )

[node name="Float8" parent="Floats" instance=ExtResource( 8 )]
position = Vector2( 12756.5, 280.841 )

[node name="Float9" parent="Floats" instance=ExtResource( 8 )]
position = Vector2( 13078.6, 280.841 )

[node name="Float10" parent="Floats" instance=ExtResource( 8 )]
position = Vector2( 13407, 280.841 )

[node name="Float11" parent="Floats" instance=ExtResource( 8 )]
position = Vector2( 13725.9, 280.841 )

[node name="Float12" parent="Floats" instance=ExtResource( 8 )]
position = Vector2( 14046.5, 280.841 )

[node name="Float13" parent="Floats" instance=ExtResource( 8 )]
position = Vector2( 14505, 699.723 )

[node name="Float14" parent="Floats" instance=ExtResource( 8 )]
position = Vector2( 14910.8, 650.023 )

[node name="Float15" parent="Floats" instance=ExtResource( 8 )]
position = Vector2( 15284.6, 538.442 )

[node name="Float16" parent="Floats" instance=ExtResource( 8 )]
position = Vector2( 5543.58, 571.17 )

[node name="Enemies" type="Node2D" parent="."]

[node name="Enemy1" parent="Enemies" instance=ExtResource( 9 )]
position = Vector2( 9917.64, 678.996 )
script = SubResource( 2 )

[node name="Enemy2" parent="Enemies" instance=ExtResource( 9 )]
position = Vector2( 15968.4, 688.792 )
script = SubResource( 2 )

[node name="Enemy3" parent="Enemies" instance=ExtResource( 9 )]
position = Vector2( 3954.42, 685.933 )
script = SubResource( 2 )

[node name="Enemy4" parent="Enemies" instance=ExtResource( 9 )]
position = Vector2( 4658.24, 690.009 )
script = SubResource( 2 )

[node name="Enemy5" parent="Enemies" instance=ExtResource( 9 )]
position = Vector2( 6714.18, 681.611 )
script = SubResource( 2 )

[node name="Enemy6" parent="Enemies" instance=ExtResource( 9 )]
position = Vector2( 6275.31, 632.117 )
script = SubResource( 2 )

[node name="Enemy7" parent="Enemies" instance=ExtResource( 9 )]
position = Vector2( 7783.54, 666.504 )
script = SubResource( 2 )

[node name="Enemy8" parent="Enemies" instance=ExtResource( 9 )]
position = Vector2( 8440.16, 665.586 )
script = SubResource( 2 )

[node name="Enemy9" parent="Enemies" instance=ExtResource( 9 )]
position = Vector2( 9456.63, 669.292 )
script = SubResource( 2 )

[node name="Enemy10" parent="Enemies" instance=ExtResource( 9 )]
position = Vector2( 16635.3, 685.091 )
script = SubResource( 2 )

[node name="OpenDoor" parent="." instance=ExtResource( 10 )]
position = Vector2( 17103.8, 654.984 )

[node name="KinematicBody2D" parent="." groups=[
"Player",
] instance=ExtResource( 11 )]
position = Vector2( 104.578, 670.533 )
script = SubResource( 3 )

